"""
Django settings for wiltshirf project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


#load dotenv
load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&(ivgj5)#m!+dcgi=e0m+wp_(ni1*!1g%c^a%&sp*i(*5woz^8'

# paystack Public Key
PAYSTACK_PUBLIC_KEY =  os.getenv('PAYSTACK_PUBLIC_KEY')
PAYSTACK_SECRET_KEY =  os.getenv('PAYSTACK_SECRET_KEY')
# DEFAULT_FROM_EMAIL = 'noreply@yourdomain.com'
DEFAULT_FROM_EMAIL = 'info@schooldevs.com'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp.apps.MyappConfig',
    "django_browser_reload",
    "crispy_forms",
    "crispy_bootstrap4",
    "widget_tweaks",
    'django.contrib.humanize',
]


INSTALLED_APPS += ['django_celery_beat','django_celery_results']

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

CELERY_BROKER_URL = 'django://'  # use Django DB as broker
CELERY_RESULT_BACKEND = 'django-db'

# Optional
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

JAZZMIN_SETTINGS = {
    "site_title": "Wiltshirf Admin",
    "site_header": "Wiltshirf Realty",
    "site_brand": "Wiltshirf",
    "welcome_sign": "Welcome to Wiltshirf Admin",
    "copyright": "Wiltshirf 2025",
    "show_sidebar": True,
    "navigation_expanded": True,
    "user_avatar": None,
    "theme": "cosmo"
}

# settings.py

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True          # ✅ Use TLS
EMAIL_USE_SSL = False         # ❌ Don't use SSL when using TLS
EMAIL_HOST_USER = 'wonderpaul243@gmail.com'
EMAIL_HOST_PASSWORD = 'cxuzngiwllihmayb'  # App password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# EMAIL_PORT = 465

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wiltshirf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
                'myapp.context_processors.user_info',
            ],
        },
    },
]

WSGI_APPLICATION = 'wiltshirf.wsgi.application'

GOOGLE_MAPS_API_KEY = 'AIzaSyDQUDUVxVx_y7t5JvAHfVC_hYpgsHlU8Io'
# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = "Dashboard/"
LOGOUT_REDIRECT_URL = 'LoginUser'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,  'static'),
]

STATIC_URL = "/static/"

MEDIA_ROOT = os.path.join(BASE_DIR,  'media')

MEDIA_URL = "/media/"

# For production (when running collectstatic)
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
